name: 'terraform-kubernetes-addons'

on:
  pull_request:
    branches:
      - main
    paths:
      - 'modules/aws/*'
      - 'modules/aws/*/*'
      - '.github/workflows'
      - 'helm-dependencies.yaml'
      - 'update_containers_tags.sh'
  # Enable it only for manual scheduling, while debugging jobs
  #workflow_dispatch:

jobs:
  # Enable this, when we also start caring of modules other than AWS (eks)
  #collectInputs:
  #  if: github.ref != 'refs/heads/release'
  #  name: Collect workflow inputs
  #  runs-on: ubuntu-latest
  #  outputs:
  #    directories: ${{ steps.dirs.outputs.directories }}
  #  steps:
  #    - name: Checkout
  #      uses: actions/checkout@v3
  #
  #    - name: Get root directories
  #      id: dirs
  #      uses: clowdhaus/terraform-composite-actions/directories@v1.6.0

  terraform-lint:
    name: 'renovate:config and tf-lint'
    if: github.ref != 'refs/heads/release'
    runs-on: ubuntu-latest
    # Enable this, when we also start caring of modules other than AWS (eks)
    #needs: collectInputs
    #strategy:
    #  matrix:
    #    directory: ${{ fromJson(needs.collectInputs.outputs.directories) }}
    steps:
    - name: Checkout
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        check-latest: true

    - name: Install Renovate
      run: npm install -g renovate

    - name: Check Renovate configuraton
      run: renovate-config-validator

    - name: Terraform min/max versions
      id: minMax
      uses: clowdhaus/terraform-min-max@v1.2.7
      with:
        directory: "./modules/aws"
        #directory: ${{ matrix.directory }}

    - name: Pre-commit Terraform ${{ steps.minMax.outputs.minVersion }}
      uses: clowdhaus/terraform-composite-actions/pre-commit@v1.8.3
      with:
        terraform-version: ${{ steps.minMax.outputs.minVersion }}
        args: 'terraform_validate --color=always --show-diff-on-failure --files $(ls *.tf ./modules/aws/*.tf)'
        # Use this instead, when we also start caring of modules other than AWS (eks)
        #args: 'terraform_validate --color=always --show-diff-on-failure --files $(ls *.tf ${{ matrix.directory }}/*.tf'
    
    - name: Remove installed terraform/tflint
      run: |
        sudo rm -f /usr/bin/terraform
        sudo rm -f /usr/bin/tflint

    - name: Pre-commit Terraform ${{ steps.minMax.outputs.maxVersion }}
      uses: clowdhaus/terraform-composite-actions/pre-commit@v1.8.3
      with:
        terraform-version: ${{ steps.minMax.outputs.maxVersion }}
        args: 'terraform_validate --color=always --show-diff-on-failure --files $(ls *.tf ./modules/aws/*.tf)'

    - name: 'asdf:install'

      uses: asdf-vm/actions/install@v3.0.2

    - uses: actions/setup-python@v5
      
    - name: Init tooling
      run: |
        tflint --init

    - name: Check modules
      uses: pre-commit/action@v3.0.0
      with:
        extra_args: --show-diff-on-failure --all-files
    
    - name: Update containers tags in-place
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |-
        set +e
        gh pr diff ${{ github.event.pull_request.number }} | grep -qE "^(--- a|\+\+\+ b).*helm-dependencies.yaml"
        rc=$?
        set -e
        if [ $rc -eq 0 ]; then
          gh pr checkout ${{ github.event.pull_request.number }}
          set +e
          git --no-pager log --no-merges --pretty=format:'%s' @ | head -1 | grep -qF "[updater-bot] update containers tags"
          rc=$?
          set -e
          if [ $rc -ne 0 ]; then
            pip install jq yq pyyaml packaging
            ./update_containers_tags.sh -a --helm | grep -v DEBUG
            git config --global user.email "updater-bot@example.com"
            git config --global user.name "updater-bot"
            git add helm-dependencies.yaml
            set +e
            git commit -m "[updater-bot] update containers tags" && git push
            set -e
          fi
        fi
